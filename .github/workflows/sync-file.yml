name: Sync File to Targets

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  sync-file:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout source repository
      uses: actions/checkout@v2
      with:
        repository: yale-redcap/yes3-powershell-scripts
        ref: main
        path: source-repo

    - name: Set up Git
      run: |
        git config --global user.name "github-actions"
        git config --global user.email "github-actions@github.com"

    - name: Install GitHub CLI
      run: |
        curl -L https://github.com/cli/cli/releases/download/v2.22.1/gh_2.22.1_linux_amd64.tar.gz -o ghcli.tar.gz
        tar -xzf ghcli.tar.gz
        sudo mv gh_2.22.1_linux_amd64/bin/gh /usr/local/bin/
        rm -rf gh_2.22.1_linux_amd64 ghcli.tar.gz

    - name: Authenticate GitHub CLI
      run: echo "${{ secrets.PC_PAT_ALL_REPOS }}" | gh auth login --with-token

    - name: Process target repositories
      env:
        PAT: ${{ secrets.PC_PAT_ALL_REPOS }}
      run: |
        set -e # Exit immediately if a command exits with a non-zero status.

        # Array of target repositories
        target_repos=(
          "yale-redcap/yes3-dashboard-docs"
          "yale-redcap/yes3-document-writer-guide"
          "yale-redcap/yes3-exporter-1.0-docs"
          "yale-redcap/yes3-record-dashboard"
        )

        for repo in "${target_repos[@]}"; do
          echo "Processing repository: $repo"
          git clone https://x-access-token:${{ secrets.PC_PAT_ALL_REPOS }}@github.com/$repo.git
          repo_name=$(basename $repo)
          cd $repo_name
          branch_name=sync-changes-$(date +%Y%m%d%H%M%S)
          git checkout -b $branch_name
          cp -f ../source-repo/session-install.ps1 .
          git add session-install.ps1
          
          # Check if there are changes to be committed
          if git diff-index --quiet HEAD; then
            echo "No changes to commit in $repo"
          else
            git commit -m "Sync file from yes3-powershell-scripts repository"
            git push --set-upstream origin $branch_name

            # Create a new pull request and capture the output
            pr_output=$(gh pr create --title "Sync file from yes3-powershell-scripts" --body "Automated sync of session-install.ps1 file." --base main --head $branch_name)

            # Extract the pull request URL
            pr_url=$(echo "$pr_output" | grep -o 'https://github.com/[^\"]*')
            
            # Extract the pull request number from the URL
            pr_number=$(echo $pr_url | awk -F'/' '{print $NF}')
            
            # Add a comment to the pull request
            gh pr comment $pr_number --body "Automatically merged by GitHub Actions."

            # Merge the pull request
            gh pr merge $pr_number --merge

            # Delete the branch
            gh api -X DELETE "repos/$repo/git/refs/heads/$branch_name"
          fi

          cd ..
          rm -rf $repo_name
        done
